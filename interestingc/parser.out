Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    semicolon
    multiline_comment
    percent_sign
    comma
    octal_fractional_number_literal
    solidus
    octal_number_literal
    decimal_fractional_number_literal
    close_tag
    open_tag
    hexadecimal_fractional_number_literal
    hash
    string_literal
    hexadecimal_number_literal
    siphon
    character_literal
    close_brace
    open_square
    at_sign
    whitespace
    equal_sign
    open_brace
    dot
    close_square
    singleline_comment

Grammar

Rule 0     S' -> Expression
Rule 1     Expression -> ExpressionEnclosedInParens
Rule 2     Expression -> Term
Rule 3     Expression -> Multiplication
Rule 4     Expression -> Division
Rule 5     Expression -> Sum
Rule 6     Expression -> Subtraction
Rule 7     Expression -> And
Rule 8     Expression -> Or
Rule 9     Expression -> Not
Rule 10    Expression -> TernaryExpression
Rule 11    Expression -> NoExpression
Rule 12    NoExpression -> <empty>
Rule 13    ExpressionEnclosedInParens -> open_paren Expression close_paren
Rule 14    Not -> bang Expression
Rule 15    Sum -> Expression plus_sign Expression
Rule 16    Multiplication -> Expression times_sign Expression
Rule 17    Subtraction -> Expression minus_sign Expression
Rule 18    Division -> Expression reverse_solidus Expression
Rule 19    And -> Expression and_sign and_sign Expression
Rule 20    Or -> Expression pipe pipe Expression
Rule 21    TernaryExpression -> Expression question_mark Expression colon Expression
Rule 22    Literal -> DecimalNumberLiteral
Rule 23    Term -> Literal
Rule 24    Term -> Identifier
Rule 25    Identifier -> identifier
Rule 26    DecimalNumberLiteral -> decimal_number_literal

Terminals, with rules where they appear

and_sign             : 19 19
at_sign              : 
bang                 : 14
character_literal    : 
close_brace          : 
close_paren          : 13
close_square         : 
close_tag            : 
colon                : 21
comma                : 
decimal_fractional_number_literal : 
decimal_number_literal : 26
dot                  : 
equal_sign           : 
error                : 
hash                 : 
hexadecimal_fractional_number_literal : 
hexadecimal_number_literal : 
identifier           : 25
minus_sign           : 17
multiline_comment    : 
octal_fractional_number_literal : 
octal_number_literal : 
open_brace           : 
open_paren           : 13
open_square          : 
open_tag             : 
percent_sign         : 
pipe                 : 20 20
plus_sign            : 15
question_mark        : 21
reverse_solidus      : 18
semicolon            : 
singleline_comment   : 
siphon               : 
solidus              : 
string_literal       : 
times_sign           : 16
whitespace           : 

Nonterminals, with rules where they appear

And                  : 7
DecimalNumberLiteral : 22
Division             : 4
Expression           : 13 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 21 0
ExpressionEnclosedInParens : 1
Identifier           : 24
Literal              : 23
Multiplication       : 3
NoExpression         : 11
Not                  : 9
Or                   : 8
Subtraction          : 6
Sum                  : 5
Term                 : 2
TernaryExpression    : 10

Parsing method: LALR

state 0

    (0) S' -> . Expression
    (1) Expression -> . ExpressionEnclosedInParens
    (2) Expression -> . Term
    (3) Expression -> . Multiplication
    (4) Expression -> . Division
    (5) Expression -> . Sum
    (6) Expression -> . Subtraction
    (7) Expression -> . And
    (8) Expression -> . Or
    (9) Expression -> . Not
    (10) Expression -> . TernaryExpression
    (11) Expression -> . NoExpression
    (13) ExpressionEnclosedInParens -> . open_paren Expression close_paren
    (23) Term -> . Literal
    (24) Term -> . Identifier
    (16) Multiplication -> . Expression times_sign Expression
    (18) Division -> . Expression reverse_solidus Expression
    (15) Sum -> . Expression plus_sign Expression
    (17) Subtraction -> . Expression minus_sign Expression
    (19) And -> . Expression and_sign and_sign Expression
    (20) Or -> . Expression pipe pipe Expression
    (14) Not -> . bang Expression
    (21) TernaryExpression -> . Expression question_mark Expression colon Expression
    (12) NoExpression -> .
    (22) Literal -> . DecimalNumberLiteral
    (25) Identifier -> . identifier
    (26) DecimalNumberLiteral -> . decimal_number_literal

    open_paren      shift and go to state 13
    bang            shift and go to state 12
    times_sign      reduce using rule 12 (NoExpression -> .)
    reverse_solidus reduce using rule 12 (NoExpression -> .)
    plus_sign       reduce using rule 12 (NoExpression -> .)
    minus_sign      reduce using rule 12 (NoExpression -> .)
    and_sign        reduce using rule 12 (NoExpression -> .)
    pipe            reduce using rule 12 (NoExpression -> .)
    question_mark   reduce using rule 12 (NoExpression -> .)
    $end            reduce using rule 12 (NoExpression -> .)
    identifier      shift and go to state 19
    decimal_number_literal shift and go to state 17

    And                            shift and go to state 16
    Division                       shift and go to state 6
    Term                           shift and go to state 10
    DecimalNumberLiteral           shift and go to state 5
    TernaryExpression              shift and go to state 1
    Sum                            shift and go to state 2
    Not                            shift and go to state 9
    Literal                        shift and go to state 3
    ExpressionEnclosedInParens     shift and go to state 18
    Subtraction                    shift and go to state 8
    NoExpression                   shift and go to state 4
    Multiplication                 shift and go to state 11
    Identifier                     shift and go to state 14
    Expression                     shift and go to state 15
    Or                             shift and go to state 7

state 1

    (10) Expression -> TernaryExpression .

    times_sign      reduce using rule 10 (Expression -> TernaryExpression .)
    reverse_solidus reduce using rule 10 (Expression -> TernaryExpression .)
    plus_sign       reduce using rule 10 (Expression -> TernaryExpression .)
    minus_sign      reduce using rule 10 (Expression -> TernaryExpression .)
    and_sign        reduce using rule 10 (Expression -> TernaryExpression .)
    pipe            reduce using rule 10 (Expression -> TernaryExpression .)
    question_mark   reduce using rule 10 (Expression -> TernaryExpression .)
    $end            reduce using rule 10 (Expression -> TernaryExpression .)
    close_paren     reduce using rule 10 (Expression -> TernaryExpression .)
    colon           reduce using rule 10 (Expression -> TernaryExpression .)


state 2

    (5) Expression -> Sum .

    times_sign      reduce using rule 5 (Expression -> Sum .)
    reverse_solidus reduce using rule 5 (Expression -> Sum .)
    plus_sign       reduce using rule 5 (Expression -> Sum .)
    minus_sign      reduce using rule 5 (Expression -> Sum .)
    and_sign        reduce using rule 5 (Expression -> Sum .)
    pipe            reduce using rule 5 (Expression -> Sum .)
    question_mark   reduce using rule 5 (Expression -> Sum .)
    $end            reduce using rule 5 (Expression -> Sum .)
    close_paren     reduce using rule 5 (Expression -> Sum .)
    colon           reduce using rule 5 (Expression -> Sum .)


state 3

    (23) Term -> Literal .

    close_paren     reduce using rule 23 (Term -> Literal .)
    times_sign      reduce using rule 23 (Term -> Literal .)
    reverse_solidus reduce using rule 23 (Term -> Literal .)
    plus_sign       reduce using rule 23 (Term -> Literal .)
    minus_sign      reduce using rule 23 (Term -> Literal .)
    and_sign        reduce using rule 23 (Term -> Literal .)
    pipe            reduce using rule 23 (Term -> Literal .)
    question_mark   reduce using rule 23 (Term -> Literal .)
    $end            reduce using rule 23 (Term -> Literal .)
    colon           reduce using rule 23 (Term -> Literal .)


state 4

    (11) Expression -> NoExpression .

    times_sign      reduce using rule 11 (Expression -> NoExpression .)
    reverse_solidus reduce using rule 11 (Expression -> NoExpression .)
    plus_sign       reduce using rule 11 (Expression -> NoExpression .)
    minus_sign      reduce using rule 11 (Expression -> NoExpression .)
    and_sign        reduce using rule 11 (Expression -> NoExpression .)
    pipe            reduce using rule 11 (Expression -> NoExpression .)
    question_mark   reduce using rule 11 (Expression -> NoExpression .)
    $end            reduce using rule 11 (Expression -> NoExpression .)
    close_paren     reduce using rule 11 (Expression -> NoExpression .)
    colon           reduce using rule 11 (Expression -> NoExpression .)


state 5

    (22) Literal -> DecimalNumberLiteral .

    times_sign      reduce using rule 22 (Literal -> DecimalNumberLiteral .)
    reverse_solidus reduce using rule 22 (Literal -> DecimalNumberLiteral .)
    plus_sign       reduce using rule 22 (Literal -> DecimalNumberLiteral .)
    minus_sign      reduce using rule 22 (Literal -> DecimalNumberLiteral .)
    and_sign        reduce using rule 22 (Literal -> DecimalNumberLiteral .)
    pipe            reduce using rule 22 (Literal -> DecimalNumberLiteral .)
    question_mark   reduce using rule 22 (Literal -> DecimalNumberLiteral .)
    $end            reduce using rule 22 (Literal -> DecimalNumberLiteral .)
    close_paren     reduce using rule 22 (Literal -> DecimalNumberLiteral .)
    colon           reduce using rule 22 (Literal -> DecimalNumberLiteral .)


state 6

    (4) Expression -> Division .

    times_sign      reduce using rule 4 (Expression -> Division .)
    reverse_solidus reduce using rule 4 (Expression -> Division .)
    plus_sign       reduce using rule 4 (Expression -> Division .)
    minus_sign      reduce using rule 4 (Expression -> Division .)
    and_sign        reduce using rule 4 (Expression -> Division .)
    pipe            reduce using rule 4 (Expression -> Division .)
    question_mark   reduce using rule 4 (Expression -> Division .)
    $end            reduce using rule 4 (Expression -> Division .)
    close_paren     reduce using rule 4 (Expression -> Division .)
    colon           reduce using rule 4 (Expression -> Division .)


state 7

    (8) Expression -> Or .

    times_sign      reduce using rule 8 (Expression -> Or .)
    reverse_solidus reduce using rule 8 (Expression -> Or .)
    plus_sign       reduce using rule 8 (Expression -> Or .)
    minus_sign      reduce using rule 8 (Expression -> Or .)
    and_sign        reduce using rule 8 (Expression -> Or .)
    pipe            reduce using rule 8 (Expression -> Or .)
    question_mark   reduce using rule 8 (Expression -> Or .)
    $end            reduce using rule 8 (Expression -> Or .)
    close_paren     reduce using rule 8 (Expression -> Or .)
    colon           reduce using rule 8 (Expression -> Or .)


state 8

    (6) Expression -> Subtraction .

    times_sign      reduce using rule 6 (Expression -> Subtraction .)
    reverse_solidus reduce using rule 6 (Expression -> Subtraction .)
    plus_sign       reduce using rule 6 (Expression -> Subtraction .)
    minus_sign      reduce using rule 6 (Expression -> Subtraction .)
    and_sign        reduce using rule 6 (Expression -> Subtraction .)
    pipe            reduce using rule 6 (Expression -> Subtraction .)
    question_mark   reduce using rule 6 (Expression -> Subtraction .)
    $end            reduce using rule 6 (Expression -> Subtraction .)
    close_paren     reduce using rule 6 (Expression -> Subtraction .)
    colon           reduce using rule 6 (Expression -> Subtraction .)


state 9

    (9) Expression -> Not .

    times_sign      reduce using rule 9 (Expression -> Not .)
    reverse_solidus reduce using rule 9 (Expression -> Not .)
    plus_sign       reduce using rule 9 (Expression -> Not .)
    minus_sign      reduce using rule 9 (Expression -> Not .)
    and_sign        reduce using rule 9 (Expression -> Not .)
    pipe            reduce using rule 9 (Expression -> Not .)
    question_mark   reduce using rule 9 (Expression -> Not .)
    $end            reduce using rule 9 (Expression -> Not .)
    close_paren     reduce using rule 9 (Expression -> Not .)
    colon           reduce using rule 9 (Expression -> Not .)


state 10

    (2) Expression -> Term .

    times_sign      reduce using rule 2 (Expression -> Term .)
    reverse_solidus reduce using rule 2 (Expression -> Term .)
    plus_sign       reduce using rule 2 (Expression -> Term .)
    minus_sign      reduce using rule 2 (Expression -> Term .)
    and_sign        reduce using rule 2 (Expression -> Term .)
    pipe            reduce using rule 2 (Expression -> Term .)
    question_mark   reduce using rule 2 (Expression -> Term .)
    $end            reduce using rule 2 (Expression -> Term .)
    close_paren     reduce using rule 2 (Expression -> Term .)
    colon           reduce using rule 2 (Expression -> Term .)


state 11

    (3) Expression -> Multiplication .

    times_sign      reduce using rule 3 (Expression -> Multiplication .)
    reverse_solidus reduce using rule 3 (Expression -> Multiplication .)
    plus_sign       reduce using rule 3 (Expression -> Multiplication .)
    minus_sign      reduce using rule 3 (Expression -> Multiplication .)
    and_sign        reduce using rule 3 (Expression -> Multiplication .)
    pipe            reduce using rule 3 (Expression -> Multiplication .)
    question_mark   reduce using rule 3 (Expression -> Multiplication .)
    $end            reduce using rule 3 (Expression -> Multiplication .)
    close_paren     reduce using rule 3 (Expression -> Multiplication .)
    colon           reduce using rule 3 (Expression -> Multiplication .)


state 12

    (14) Not -> bang . Expression
    (1) Expression -> . ExpressionEnclosedInParens
    (2) Expression -> . Term
    (3) Expression -> . Multiplication
    (4) Expression -> . Division
    (5) Expression -> . Sum
    (6) Expression -> . Subtraction
    (7) Expression -> . And
    (8) Expression -> . Or
    (9) Expression -> . Not
    (10) Expression -> . TernaryExpression
    (11) Expression -> . NoExpression
    (13) ExpressionEnclosedInParens -> . open_paren Expression close_paren
    (23) Term -> . Literal
    (24) Term -> . Identifier
    (16) Multiplication -> . Expression times_sign Expression
    (18) Division -> . Expression reverse_solidus Expression
    (15) Sum -> . Expression plus_sign Expression
    (17) Subtraction -> . Expression minus_sign Expression
    (19) And -> . Expression and_sign and_sign Expression
    (20) Or -> . Expression pipe pipe Expression
    (14) Not -> . bang Expression
    (21) TernaryExpression -> . Expression question_mark Expression colon Expression
    (12) NoExpression -> .
    (22) Literal -> . DecimalNumberLiteral
    (25) Identifier -> . identifier
    (26) DecimalNumberLiteral -> . decimal_number_literal

    open_paren      shift and go to state 13
    bang            shift and go to state 12
    times_sign      reduce using rule 12 (NoExpression -> .)
    reverse_solidus reduce using rule 12 (NoExpression -> .)
    plus_sign       reduce using rule 12 (NoExpression -> .)
    minus_sign      reduce using rule 12 (NoExpression -> .)
    and_sign        reduce using rule 12 (NoExpression -> .)
    pipe            reduce using rule 12 (NoExpression -> .)
    question_mark   reduce using rule 12 (NoExpression -> .)
    $end            reduce using rule 12 (NoExpression -> .)
    close_paren     reduce using rule 12 (NoExpression -> .)
    colon           reduce using rule 12 (NoExpression -> .)
    identifier      shift and go to state 19
    decimal_number_literal shift and go to state 17

    And                            shift and go to state 16
    Division                       shift and go to state 6
    Term                           shift and go to state 10
    DecimalNumberLiteral           shift and go to state 5
    TernaryExpression              shift and go to state 1
    Sum                            shift and go to state 2
    Not                            shift and go to state 9
    Literal                        shift and go to state 3
    ExpressionEnclosedInParens     shift and go to state 18
    Subtraction                    shift and go to state 8
    NoExpression                   shift and go to state 4
    Multiplication                 shift and go to state 11
    Identifier                     shift and go to state 14
    Expression                     shift and go to state 20
    Or                             shift and go to state 7

state 13

    (13) ExpressionEnclosedInParens -> open_paren . Expression close_paren
    (1) Expression -> . ExpressionEnclosedInParens
    (2) Expression -> . Term
    (3) Expression -> . Multiplication
    (4) Expression -> . Division
    (5) Expression -> . Sum
    (6) Expression -> . Subtraction
    (7) Expression -> . And
    (8) Expression -> . Or
    (9) Expression -> . Not
    (10) Expression -> . TernaryExpression
    (11) Expression -> . NoExpression
    (13) ExpressionEnclosedInParens -> . open_paren Expression close_paren
    (23) Term -> . Literal
    (24) Term -> . Identifier
    (16) Multiplication -> . Expression times_sign Expression
    (18) Division -> . Expression reverse_solidus Expression
    (15) Sum -> . Expression plus_sign Expression
    (17) Subtraction -> . Expression minus_sign Expression
    (19) And -> . Expression and_sign and_sign Expression
    (20) Or -> . Expression pipe pipe Expression
    (14) Not -> . bang Expression
    (21) TernaryExpression -> . Expression question_mark Expression colon Expression
    (12) NoExpression -> .
    (22) Literal -> . DecimalNumberLiteral
    (25) Identifier -> . identifier
    (26) DecimalNumberLiteral -> . decimal_number_literal

    open_paren      shift and go to state 13
    bang            shift and go to state 12
    close_paren     reduce using rule 12 (NoExpression -> .)
    times_sign      reduce using rule 12 (NoExpression -> .)
    reverse_solidus reduce using rule 12 (NoExpression -> .)
    plus_sign       reduce using rule 12 (NoExpression -> .)
    minus_sign      reduce using rule 12 (NoExpression -> .)
    and_sign        reduce using rule 12 (NoExpression -> .)
    pipe            reduce using rule 12 (NoExpression -> .)
    question_mark   reduce using rule 12 (NoExpression -> .)
    identifier      shift and go to state 19
    decimal_number_literal shift and go to state 17

    And                            shift and go to state 16
    Division                       shift and go to state 6
    Term                           shift and go to state 10
    DecimalNumberLiteral           shift and go to state 5
    TernaryExpression              shift and go to state 1
    Sum                            shift and go to state 2
    Not                            shift and go to state 9
    Literal                        shift and go to state 3
    ExpressionEnclosedInParens     shift and go to state 18
    Subtraction                    shift and go to state 8
    NoExpression                   shift and go to state 4
    Multiplication                 shift and go to state 11
    Identifier                     shift and go to state 14
    Expression                     shift and go to state 21
    Or                             shift and go to state 7

state 14

    (24) Term -> Identifier .

    close_paren     reduce using rule 24 (Term -> Identifier .)
    times_sign      reduce using rule 24 (Term -> Identifier .)
    reverse_solidus reduce using rule 24 (Term -> Identifier .)
    plus_sign       reduce using rule 24 (Term -> Identifier .)
    minus_sign      reduce using rule 24 (Term -> Identifier .)
    and_sign        reduce using rule 24 (Term -> Identifier .)
    pipe            reduce using rule 24 (Term -> Identifier .)
    question_mark   reduce using rule 24 (Term -> Identifier .)
    $end            reduce using rule 24 (Term -> Identifier .)
    colon           reduce using rule 24 (Term -> Identifier .)


state 15

    (0) S' -> Expression .
    (16) Multiplication -> Expression . times_sign Expression
    (18) Division -> Expression . reverse_solidus Expression
    (15) Sum -> Expression . plus_sign Expression
    (17) Subtraction -> Expression . minus_sign Expression
    (19) And -> Expression . and_sign and_sign Expression
    (20) Or -> Expression . pipe pipe Expression
    (21) TernaryExpression -> Expression . question_mark Expression colon Expression

    times_sign      shift and go to state 22
    reverse_solidus shift and go to state 23
    plus_sign       shift and go to state 25
    minus_sign      shift and go to state 27
    and_sign        shift and go to state 28
    pipe            shift and go to state 26
    question_mark   shift and go to state 24


state 16

    (7) Expression -> And .

    times_sign      reduce using rule 7 (Expression -> And .)
    reverse_solidus reduce using rule 7 (Expression -> And .)
    plus_sign       reduce using rule 7 (Expression -> And .)
    minus_sign      reduce using rule 7 (Expression -> And .)
    and_sign        reduce using rule 7 (Expression -> And .)
    pipe            reduce using rule 7 (Expression -> And .)
    question_mark   reduce using rule 7 (Expression -> And .)
    $end            reduce using rule 7 (Expression -> And .)
    close_paren     reduce using rule 7 (Expression -> And .)
    colon           reduce using rule 7 (Expression -> And .)


state 17

    (26) DecimalNumberLiteral -> decimal_number_literal .

    colon           reduce using rule 26 (DecimalNumberLiteral -> decimal_number_literal .)
    times_sign      reduce using rule 26 (DecimalNumberLiteral -> decimal_number_literal .)
    reverse_solidus reduce using rule 26 (DecimalNumberLiteral -> decimal_number_literal .)
    plus_sign       reduce using rule 26 (DecimalNumberLiteral -> decimal_number_literal .)
    minus_sign      reduce using rule 26 (DecimalNumberLiteral -> decimal_number_literal .)
    and_sign        reduce using rule 26 (DecimalNumberLiteral -> decimal_number_literal .)
    pipe            reduce using rule 26 (DecimalNumberLiteral -> decimal_number_literal .)
    question_mark   reduce using rule 26 (DecimalNumberLiteral -> decimal_number_literal .)
    $end            reduce using rule 26 (DecimalNumberLiteral -> decimal_number_literal .)
    close_paren     reduce using rule 26 (DecimalNumberLiteral -> decimal_number_literal .)


state 18

    (1) Expression -> ExpressionEnclosedInParens .

    times_sign      reduce using rule 1 (Expression -> ExpressionEnclosedInParens .)
    reverse_solidus reduce using rule 1 (Expression -> ExpressionEnclosedInParens .)
    plus_sign       reduce using rule 1 (Expression -> ExpressionEnclosedInParens .)
    minus_sign      reduce using rule 1 (Expression -> ExpressionEnclosedInParens .)
    and_sign        reduce using rule 1 (Expression -> ExpressionEnclosedInParens .)
    pipe            reduce using rule 1 (Expression -> ExpressionEnclosedInParens .)
    question_mark   reduce using rule 1 (Expression -> ExpressionEnclosedInParens .)
    $end            reduce using rule 1 (Expression -> ExpressionEnclosedInParens .)
    close_paren     reduce using rule 1 (Expression -> ExpressionEnclosedInParens .)
    colon           reduce using rule 1 (Expression -> ExpressionEnclosedInParens .)


state 19

    (25) Identifier -> identifier .

    times_sign      reduce using rule 25 (Identifier -> identifier .)
    reverse_solidus reduce using rule 25 (Identifier -> identifier .)
    plus_sign       reduce using rule 25 (Identifier -> identifier .)
    minus_sign      reduce using rule 25 (Identifier -> identifier .)
    and_sign        reduce using rule 25 (Identifier -> identifier .)
    pipe            reduce using rule 25 (Identifier -> identifier .)
    question_mark   reduce using rule 25 (Identifier -> identifier .)
    $end            reduce using rule 25 (Identifier -> identifier .)
    close_paren     reduce using rule 25 (Identifier -> identifier .)
    colon           reduce using rule 25 (Identifier -> identifier .)


state 20

    (14) Not -> bang Expression .
    (16) Multiplication -> Expression . times_sign Expression
    (18) Division -> Expression . reverse_solidus Expression
    (15) Sum -> Expression . plus_sign Expression
    (17) Subtraction -> Expression . minus_sign Expression
    (19) And -> Expression . and_sign and_sign Expression
    (20) Or -> Expression . pipe pipe Expression
    (21) TernaryExpression -> Expression . question_mark Expression colon Expression

  ! shift/reduce conflict for times_sign resolved as shift
  ! shift/reduce conflict for reverse_solidus resolved as shift
  ! shift/reduce conflict for plus_sign resolved as shift
  ! shift/reduce conflict for minus_sign resolved as shift
  ! shift/reduce conflict for and_sign resolved as shift
  ! shift/reduce conflict for pipe resolved as shift
  ! shift/reduce conflict for question_mark resolved as shift
    $end            reduce using rule 14 (Not -> bang Expression .)
    close_paren     reduce using rule 14 (Not -> bang Expression .)
    colon           reduce using rule 14 (Not -> bang Expression .)
    times_sign      shift and go to state 22
    reverse_solidus shift and go to state 23
    plus_sign       shift and go to state 25
    minus_sign      shift and go to state 27
    and_sign        shift and go to state 28
    pipe            shift and go to state 26
    question_mark   shift and go to state 24

  ! times_sign      [ reduce using rule 14 (Not -> bang Expression .) ]
  ! reverse_solidus [ reduce using rule 14 (Not -> bang Expression .) ]
  ! plus_sign       [ reduce using rule 14 (Not -> bang Expression .) ]
  ! minus_sign      [ reduce using rule 14 (Not -> bang Expression .) ]
  ! and_sign        [ reduce using rule 14 (Not -> bang Expression .) ]
  ! pipe            [ reduce using rule 14 (Not -> bang Expression .) ]
  ! question_mark   [ reduce using rule 14 (Not -> bang Expression .) ]


state 21

    (13) ExpressionEnclosedInParens -> open_paren Expression . close_paren
    (16) Multiplication -> Expression . times_sign Expression
    (18) Division -> Expression . reverse_solidus Expression
    (15) Sum -> Expression . plus_sign Expression
    (17) Subtraction -> Expression . minus_sign Expression
    (19) And -> Expression . and_sign and_sign Expression
    (20) Or -> Expression . pipe pipe Expression
    (21) TernaryExpression -> Expression . question_mark Expression colon Expression

    close_paren     shift and go to state 29
    times_sign      shift and go to state 22
    reverse_solidus shift and go to state 23
    plus_sign       shift and go to state 25
    minus_sign      shift and go to state 27
    and_sign        shift and go to state 28
    pipe            shift and go to state 26
    question_mark   shift and go to state 24


state 22

    (16) Multiplication -> Expression times_sign . Expression
    (1) Expression -> . ExpressionEnclosedInParens
    (2) Expression -> . Term
    (3) Expression -> . Multiplication
    (4) Expression -> . Division
    (5) Expression -> . Sum
    (6) Expression -> . Subtraction
    (7) Expression -> . And
    (8) Expression -> . Or
    (9) Expression -> . Not
    (10) Expression -> . TernaryExpression
    (11) Expression -> . NoExpression
    (13) ExpressionEnclosedInParens -> . open_paren Expression close_paren
    (23) Term -> . Literal
    (24) Term -> . Identifier
    (16) Multiplication -> . Expression times_sign Expression
    (18) Division -> . Expression reverse_solidus Expression
    (15) Sum -> . Expression plus_sign Expression
    (17) Subtraction -> . Expression minus_sign Expression
    (19) And -> . Expression and_sign and_sign Expression
    (20) Or -> . Expression pipe pipe Expression
    (14) Not -> . bang Expression
    (21) TernaryExpression -> . Expression question_mark Expression colon Expression
    (12) NoExpression -> .
    (22) Literal -> . DecimalNumberLiteral
    (25) Identifier -> . identifier
    (26) DecimalNumberLiteral -> . decimal_number_literal

    open_paren      shift and go to state 13
    bang            shift and go to state 12
    times_sign      reduce using rule 12 (NoExpression -> .)
    reverse_solidus reduce using rule 12 (NoExpression -> .)
    plus_sign       reduce using rule 12 (NoExpression -> .)
    minus_sign      reduce using rule 12 (NoExpression -> .)
    and_sign        reduce using rule 12 (NoExpression -> .)
    pipe            reduce using rule 12 (NoExpression -> .)
    question_mark   reduce using rule 12 (NoExpression -> .)
    $end            reduce using rule 12 (NoExpression -> .)
    close_paren     reduce using rule 12 (NoExpression -> .)
    colon           reduce using rule 12 (NoExpression -> .)
    identifier      shift and go to state 19
    decimal_number_literal shift and go to state 17

    And                            shift and go to state 16
    Division                       shift and go to state 6
    Term                           shift and go to state 10
    DecimalNumberLiteral           shift and go to state 5
    TernaryExpression              shift and go to state 1
    Sum                            shift and go to state 2
    Not                            shift and go to state 9
    Literal                        shift and go to state 3
    ExpressionEnclosedInParens     shift and go to state 18
    Subtraction                    shift and go to state 8
    NoExpression                   shift and go to state 4
    Multiplication                 shift and go to state 11
    Identifier                     shift and go to state 14
    Expression                     shift and go to state 30
    Or                             shift and go to state 7

state 23

    (18) Division -> Expression reverse_solidus . Expression
    (1) Expression -> . ExpressionEnclosedInParens
    (2) Expression -> . Term
    (3) Expression -> . Multiplication
    (4) Expression -> . Division
    (5) Expression -> . Sum
    (6) Expression -> . Subtraction
    (7) Expression -> . And
    (8) Expression -> . Or
    (9) Expression -> . Not
    (10) Expression -> . TernaryExpression
    (11) Expression -> . NoExpression
    (13) ExpressionEnclosedInParens -> . open_paren Expression close_paren
    (23) Term -> . Literal
    (24) Term -> . Identifier
    (16) Multiplication -> . Expression times_sign Expression
    (18) Division -> . Expression reverse_solidus Expression
    (15) Sum -> . Expression plus_sign Expression
    (17) Subtraction -> . Expression minus_sign Expression
    (19) And -> . Expression and_sign and_sign Expression
    (20) Or -> . Expression pipe pipe Expression
    (14) Not -> . bang Expression
    (21) TernaryExpression -> . Expression question_mark Expression colon Expression
    (12) NoExpression -> .
    (22) Literal -> . DecimalNumberLiteral
    (25) Identifier -> . identifier
    (26) DecimalNumberLiteral -> . decimal_number_literal

    open_paren      shift and go to state 13
    bang            shift and go to state 12
    times_sign      reduce using rule 12 (NoExpression -> .)
    reverse_solidus reduce using rule 12 (NoExpression -> .)
    plus_sign       reduce using rule 12 (NoExpression -> .)
    minus_sign      reduce using rule 12 (NoExpression -> .)
    and_sign        reduce using rule 12 (NoExpression -> .)
    pipe            reduce using rule 12 (NoExpression -> .)
    question_mark   reduce using rule 12 (NoExpression -> .)
    $end            reduce using rule 12 (NoExpression -> .)
    close_paren     reduce using rule 12 (NoExpression -> .)
    colon           reduce using rule 12 (NoExpression -> .)
    identifier      shift and go to state 19
    decimal_number_literal shift and go to state 17

    And                            shift and go to state 16
    Division                       shift and go to state 6
    Term                           shift and go to state 10
    DecimalNumberLiteral           shift and go to state 5
    TernaryExpression              shift and go to state 1
    Sum                            shift and go to state 2
    Not                            shift and go to state 9
    Literal                        shift and go to state 3
    ExpressionEnclosedInParens     shift and go to state 18
    Subtraction                    shift and go to state 8
    NoExpression                   shift and go to state 4
    Multiplication                 shift and go to state 11
    Identifier                     shift and go to state 14
    Expression                     shift and go to state 31
    Or                             shift and go to state 7

state 24

    (21) TernaryExpression -> Expression question_mark . Expression colon Expression
    (1) Expression -> . ExpressionEnclosedInParens
    (2) Expression -> . Term
    (3) Expression -> . Multiplication
    (4) Expression -> . Division
    (5) Expression -> . Sum
    (6) Expression -> . Subtraction
    (7) Expression -> . And
    (8) Expression -> . Or
    (9) Expression -> . Not
    (10) Expression -> . TernaryExpression
    (11) Expression -> . NoExpression
    (13) ExpressionEnclosedInParens -> . open_paren Expression close_paren
    (23) Term -> . Literal
    (24) Term -> . Identifier
    (16) Multiplication -> . Expression times_sign Expression
    (18) Division -> . Expression reverse_solidus Expression
    (15) Sum -> . Expression plus_sign Expression
    (17) Subtraction -> . Expression minus_sign Expression
    (19) And -> . Expression and_sign and_sign Expression
    (20) Or -> . Expression pipe pipe Expression
    (14) Not -> . bang Expression
    (21) TernaryExpression -> . Expression question_mark Expression colon Expression
    (12) NoExpression -> .
    (22) Literal -> . DecimalNumberLiteral
    (25) Identifier -> . identifier
    (26) DecimalNumberLiteral -> . decimal_number_literal

    open_paren      shift and go to state 13
    bang            shift and go to state 12
    colon           reduce using rule 12 (NoExpression -> .)
    times_sign      reduce using rule 12 (NoExpression -> .)
    reverse_solidus reduce using rule 12 (NoExpression -> .)
    plus_sign       reduce using rule 12 (NoExpression -> .)
    minus_sign      reduce using rule 12 (NoExpression -> .)
    and_sign        reduce using rule 12 (NoExpression -> .)
    pipe            reduce using rule 12 (NoExpression -> .)
    question_mark   reduce using rule 12 (NoExpression -> .)
    identifier      shift and go to state 19
    decimal_number_literal shift and go to state 17

    And                            shift and go to state 16
    Division                       shift and go to state 6
    Term                           shift and go to state 10
    DecimalNumberLiteral           shift and go to state 5
    TernaryExpression              shift and go to state 1
    Sum                            shift and go to state 2
    Not                            shift and go to state 9
    Literal                        shift and go to state 3
    ExpressionEnclosedInParens     shift and go to state 18
    Subtraction                    shift and go to state 8
    NoExpression                   shift and go to state 4
    Multiplication                 shift and go to state 11
    Identifier                     shift and go to state 14
    Expression                     shift and go to state 32
    Or                             shift and go to state 7

state 25

    (15) Sum -> Expression plus_sign . Expression
    (1) Expression -> . ExpressionEnclosedInParens
    (2) Expression -> . Term
    (3) Expression -> . Multiplication
    (4) Expression -> . Division
    (5) Expression -> . Sum
    (6) Expression -> . Subtraction
    (7) Expression -> . And
    (8) Expression -> . Or
    (9) Expression -> . Not
    (10) Expression -> . TernaryExpression
    (11) Expression -> . NoExpression
    (13) ExpressionEnclosedInParens -> . open_paren Expression close_paren
    (23) Term -> . Literal
    (24) Term -> . Identifier
    (16) Multiplication -> . Expression times_sign Expression
    (18) Division -> . Expression reverse_solidus Expression
    (15) Sum -> . Expression plus_sign Expression
    (17) Subtraction -> . Expression minus_sign Expression
    (19) And -> . Expression and_sign and_sign Expression
    (20) Or -> . Expression pipe pipe Expression
    (14) Not -> . bang Expression
    (21) TernaryExpression -> . Expression question_mark Expression colon Expression
    (12) NoExpression -> .
    (22) Literal -> . DecimalNumberLiteral
    (25) Identifier -> . identifier
    (26) DecimalNumberLiteral -> . decimal_number_literal

    open_paren      shift and go to state 13
    bang            shift and go to state 12
    times_sign      reduce using rule 12 (NoExpression -> .)
    reverse_solidus reduce using rule 12 (NoExpression -> .)
    plus_sign       reduce using rule 12 (NoExpression -> .)
    minus_sign      reduce using rule 12 (NoExpression -> .)
    and_sign        reduce using rule 12 (NoExpression -> .)
    pipe            reduce using rule 12 (NoExpression -> .)
    question_mark   reduce using rule 12 (NoExpression -> .)
    $end            reduce using rule 12 (NoExpression -> .)
    close_paren     reduce using rule 12 (NoExpression -> .)
    colon           reduce using rule 12 (NoExpression -> .)
    identifier      shift and go to state 19
    decimal_number_literal shift and go to state 17

    And                            shift and go to state 16
    Division                       shift and go to state 6
    Term                           shift and go to state 10
    DecimalNumberLiteral           shift and go to state 5
    TernaryExpression              shift and go to state 1
    Sum                            shift and go to state 2
    Not                            shift and go to state 9
    Literal                        shift and go to state 3
    ExpressionEnclosedInParens     shift and go to state 18
    Subtraction                    shift and go to state 8
    NoExpression                   shift and go to state 4
    Multiplication                 shift and go to state 11
    Identifier                     shift and go to state 14
    Expression                     shift and go to state 33
    Or                             shift and go to state 7

state 26

    (20) Or -> Expression pipe . pipe Expression

    pipe            shift and go to state 34


state 27

    (17) Subtraction -> Expression minus_sign . Expression
    (1) Expression -> . ExpressionEnclosedInParens
    (2) Expression -> . Term
    (3) Expression -> . Multiplication
    (4) Expression -> . Division
    (5) Expression -> . Sum
    (6) Expression -> . Subtraction
    (7) Expression -> . And
    (8) Expression -> . Or
    (9) Expression -> . Not
    (10) Expression -> . TernaryExpression
    (11) Expression -> . NoExpression
    (13) ExpressionEnclosedInParens -> . open_paren Expression close_paren
    (23) Term -> . Literal
    (24) Term -> . Identifier
    (16) Multiplication -> . Expression times_sign Expression
    (18) Division -> . Expression reverse_solidus Expression
    (15) Sum -> . Expression plus_sign Expression
    (17) Subtraction -> . Expression minus_sign Expression
    (19) And -> . Expression and_sign and_sign Expression
    (20) Or -> . Expression pipe pipe Expression
    (14) Not -> . bang Expression
    (21) TernaryExpression -> . Expression question_mark Expression colon Expression
    (12) NoExpression -> .
    (22) Literal -> . DecimalNumberLiteral
    (25) Identifier -> . identifier
    (26) DecimalNumberLiteral -> . decimal_number_literal

    open_paren      shift and go to state 13
    bang            shift and go to state 12
    times_sign      reduce using rule 12 (NoExpression -> .)
    reverse_solidus reduce using rule 12 (NoExpression -> .)
    plus_sign       reduce using rule 12 (NoExpression -> .)
    minus_sign      reduce using rule 12 (NoExpression -> .)
    and_sign        reduce using rule 12 (NoExpression -> .)
    pipe            reduce using rule 12 (NoExpression -> .)
    question_mark   reduce using rule 12 (NoExpression -> .)
    $end            reduce using rule 12 (NoExpression -> .)
    close_paren     reduce using rule 12 (NoExpression -> .)
    colon           reduce using rule 12 (NoExpression -> .)
    identifier      shift and go to state 19
    decimal_number_literal shift and go to state 17

    And                            shift and go to state 16
    Division                       shift and go to state 6
    Term                           shift and go to state 10
    DecimalNumberLiteral           shift and go to state 5
    TernaryExpression              shift and go to state 1
    Sum                            shift and go to state 2
    Not                            shift and go to state 9
    Literal                        shift and go to state 3
    ExpressionEnclosedInParens     shift and go to state 18
    Subtraction                    shift and go to state 8
    NoExpression                   shift and go to state 4
    Multiplication                 shift and go to state 11
    Identifier                     shift and go to state 14
    Expression                     shift and go to state 35
    Or                             shift and go to state 7

state 28

    (19) And -> Expression and_sign . and_sign Expression

    and_sign        shift and go to state 36


state 29

    (13) ExpressionEnclosedInParens -> open_paren Expression close_paren .

    times_sign      reduce using rule 13 (ExpressionEnclosedInParens -> open_paren Expression close_paren .)
    reverse_solidus reduce using rule 13 (ExpressionEnclosedInParens -> open_paren Expression close_paren .)
    plus_sign       reduce using rule 13 (ExpressionEnclosedInParens -> open_paren Expression close_paren .)
    minus_sign      reduce using rule 13 (ExpressionEnclosedInParens -> open_paren Expression close_paren .)
    and_sign        reduce using rule 13 (ExpressionEnclosedInParens -> open_paren Expression close_paren .)
    pipe            reduce using rule 13 (ExpressionEnclosedInParens -> open_paren Expression close_paren .)
    question_mark   reduce using rule 13 (ExpressionEnclosedInParens -> open_paren Expression close_paren .)
    $end            reduce using rule 13 (ExpressionEnclosedInParens -> open_paren Expression close_paren .)
    close_paren     reduce using rule 13 (ExpressionEnclosedInParens -> open_paren Expression close_paren .)
    colon           reduce using rule 13 (ExpressionEnclosedInParens -> open_paren Expression close_paren .)


state 30

    (16) Multiplication -> Expression times_sign Expression .
    (16) Multiplication -> Expression . times_sign Expression
    (18) Division -> Expression . reverse_solidus Expression
    (15) Sum -> Expression . plus_sign Expression
    (17) Subtraction -> Expression . minus_sign Expression
    (19) And -> Expression . and_sign and_sign Expression
    (20) Or -> Expression . pipe pipe Expression
    (21) TernaryExpression -> Expression . question_mark Expression colon Expression

  ! shift/reduce conflict for times_sign resolved as shift
  ! shift/reduce conflict for reverse_solidus resolved as shift
  ! shift/reduce conflict for plus_sign resolved as shift
  ! shift/reduce conflict for minus_sign resolved as shift
  ! shift/reduce conflict for and_sign resolved as shift
  ! shift/reduce conflict for pipe resolved as shift
  ! shift/reduce conflict for question_mark resolved as shift
    $end            reduce using rule 16 (Multiplication -> Expression times_sign Expression .)
    close_paren     reduce using rule 16 (Multiplication -> Expression times_sign Expression .)
    colon           reduce using rule 16 (Multiplication -> Expression times_sign Expression .)
    times_sign      shift and go to state 22
    reverse_solidus shift and go to state 23
    plus_sign       shift and go to state 25
    minus_sign      shift and go to state 27
    and_sign        shift and go to state 28
    pipe            shift and go to state 26
    question_mark   shift and go to state 24

  ! times_sign      [ reduce using rule 16 (Multiplication -> Expression times_sign Expression .) ]
  ! reverse_solidus [ reduce using rule 16 (Multiplication -> Expression times_sign Expression .) ]
  ! plus_sign       [ reduce using rule 16 (Multiplication -> Expression times_sign Expression .) ]
  ! minus_sign      [ reduce using rule 16 (Multiplication -> Expression times_sign Expression .) ]
  ! and_sign        [ reduce using rule 16 (Multiplication -> Expression times_sign Expression .) ]
  ! pipe            [ reduce using rule 16 (Multiplication -> Expression times_sign Expression .) ]
  ! question_mark   [ reduce using rule 16 (Multiplication -> Expression times_sign Expression .) ]


state 31

    (18) Division -> Expression reverse_solidus Expression .
    (16) Multiplication -> Expression . times_sign Expression
    (18) Division -> Expression . reverse_solidus Expression
    (15) Sum -> Expression . plus_sign Expression
    (17) Subtraction -> Expression . minus_sign Expression
    (19) And -> Expression . and_sign and_sign Expression
    (20) Or -> Expression . pipe pipe Expression
    (21) TernaryExpression -> Expression . question_mark Expression colon Expression

  ! shift/reduce conflict for times_sign resolved as shift
  ! shift/reduce conflict for reverse_solidus resolved as shift
  ! shift/reduce conflict for plus_sign resolved as shift
  ! shift/reduce conflict for minus_sign resolved as shift
  ! shift/reduce conflict for and_sign resolved as shift
  ! shift/reduce conflict for pipe resolved as shift
  ! shift/reduce conflict for question_mark resolved as shift
    close_paren     reduce using rule 18 (Division -> Expression reverse_solidus Expression .)
    colon           reduce using rule 18 (Division -> Expression reverse_solidus Expression .)
    $end            reduce using rule 18 (Division -> Expression reverse_solidus Expression .)
    times_sign      shift and go to state 22
    reverse_solidus shift and go to state 23
    plus_sign       shift and go to state 25
    minus_sign      shift and go to state 27
    and_sign        shift and go to state 28
    pipe            shift and go to state 26
    question_mark   shift and go to state 24

  ! times_sign      [ reduce using rule 18 (Division -> Expression reverse_solidus Expression .) ]
  ! reverse_solidus [ reduce using rule 18 (Division -> Expression reverse_solidus Expression .) ]
  ! plus_sign       [ reduce using rule 18 (Division -> Expression reverse_solidus Expression .) ]
  ! minus_sign      [ reduce using rule 18 (Division -> Expression reverse_solidus Expression .) ]
  ! and_sign        [ reduce using rule 18 (Division -> Expression reverse_solidus Expression .) ]
  ! pipe            [ reduce using rule 18 (Division -> Expression reverse_solidus Expression .) ]
  ! question_mark   [ reduce using rule 18 (Division -> Expression reverse_solidus Expression .) ]


state 32

    (21) TernaryExpression -> Expression question_mark Expression . colon Expression
    (16) Multiplication -> Expression . times_sign Expression
    (18) Division -> Expression . reverse_solidus Expression
    (15) Sum -> Expression . plus_sign Expression
    (17) Subtraction -> Expression . minus_sign Expression
    (19) And -> Expression . and_sign and_sign Expression
    (20) Or -> Expression . pipe pipe Expression
    (21) TernaryExpression -> Expression . question_mark Expression colon Expression

    colon           shift and go to state 37
    times_sign      shift and go to state 22
    reverse_solidus shift and go to state 23
    plus_sign       shift and go to state 25
    minus_sign      shift and go to state 27
    and_sign        shift and go to state 28
    pipe            shift and go to state 26
    question_mark   shift and go to state 24


state 33

    (15) Sum -> Expression plus_sign Expression .
    (16) Multiplication -> Expression . times_sign Expression
    (18) Division -> Expression . reverse_solidus Expression
    (15) Sum -> Expression . plus_sign Expression
    (17) Subtraction -> Expression . minus_sign Expression
    (19) And -> Expression . and_sign and_sign Expression
    (20) Or -> Expression . pipe pipe Expression
    (21) TernaryExpression -> Expression . question_mark Expression colon Expression

  ! shift/reduce conflict for times_sign resolved as shift
  ! shift/reduce conflict for reverse_solidus resolved as shift
  ! shift/reduce conflict for plus_sign resolved as shift
  ! shift/reduce conflict for minus_sign resolved as shift
  ! shift/reduce conflict for and_sign resolved as shift
  ! shift/reduce conflict for pipe resolved as shift
  ! shift/reduce conflict for question_mark resolved as shift
    $end            reduce using rule 15 (Sum -> Expression plus_sign Expression .)
    close_paren     reduce using rule 15 (Sum -> Expression plus_sign Expression .)
    colon           reduce using rule 15 (Sum -> Expression plus_sign Expression .)
    times_sign      shift and go to state 22
    reverse_solidus shift and go to state 23
    plus_sign       shift and go to state 25
    minus_sign      shift and go to state 27
    and_sign        shift and go to state 28
    pipe            shift and go to state 26
    question_mark   shift and go to state 24

  ! times_sign      [ reduce using rule 15 (Sum -> Expression plus_sign Expression .) ]
  ! reverse_solidus [ reduce using rule 15 (Sum -> Expression plus_sign Expression .) ]
  ! plus_sign       [ reduce using rule 15 (Sum -> Expression plus_sign Expression .) ]
  ! minus_sign      [ reduce using rule 15 (Sum -> Expression plus_sign Expression .) ]
  ! and_sign        [ reduce using rule 15 (Sum -> Expression plus_sign Expression .) ]
  ! pipe            [ reduce using rule 15 (Sum -> Expression plus_sign Expression .) ]
  ! question_mark   [ reduce using rule 15 (Sum -> Expression plus_sign Expression .) ]


state 34

    (20) Or -> Expression pipe pipe . Expression
    (1) Expression -> . ExpressionEnclosedInParens
    (2) Expression -> . Term
    (3) Expression -> . Multiplication
    (4) Expression -> . Division
    (5) Expression -> . Sum
    (6) Expression -> . Subtraction
    (7) Expression -> . And
    (8) Expression -> . Or
    (9) Expression -> . Not
    (10) Expression -> . TernaryExpression
    (11) Expression -> . NoExpression
    (13) ExpressionEnclosedInParens -> . open_paren Expression close_paren
    (23) Term -> . Literal
    (24) Term -> . Identifier
    (16) Multiplication -> . Expression times_sign Expression
    (18) Division -> . Expression reverse_solidus Expression
    (15) Sum -> . Expression plus_sign Expression
    (17) Subtraction -> . Expression minus_sign Expression
    (19) And -> . Expression and_sign and_sign Expression
    (20) Or -> . Expression pipe pipe Expression
    (14) Not -> . bang Expression
    (21) TernaryExpression -> . Expression question_mark Expression colon Expression
    (12) NoExpression -> .
    (22) Literal -> . DecimalNumberLiteral
    (25) Identifier -> . identifier
    (26) DecimalNumberLiteral -> . decimal_number_literal

    open_paren      shift and go to state 13
    bang            shift and go to state 12
    times_sign      reduce using rule 12 (NoExpression -> .)
    reverse_solidus reduce using rule 12 (NoExpression -> .)
    plus_sign       reduce using rule 12 (NoExpression -> .)
    minus_sign      reduce using rule 12 (NoExpression -> .)
    and_sign        reduce using rule 12 (NoExpression -> .)
    pipe            reduce using rule 12 (NoExpression -> .)
    question_mark   reduce using rule 12 (NoExpression -> .)
    $end            reduce using rule 12 (NoExpression -> .)
    close_paren     reduce using rule 12 (NoExpression -> .)
    colon           reduce using rule 12 (NoExpression -> .)
    identifier      shift and go to state 19
    decimal_number_literal shift and go to state 17

    And                            shift and go to state 16
    Division                       shift and go to state 6
    Term                           shift and go to state 10
    DecimalNumberLiteral           shift and go to state 5
    TernaryExpression              shift and go to state 1
    Sum                            shift and go to state 2
    Not                            shift and go to state 9
    Literal                        shift and go to state 3
    ExpressionEnclosedInParens     shift and go to state 18
    Subtraction                    shift and go to state 8
    NoExpression                   shift and go to state 4
    Multiplication                 shift and go to state 11
    Identifier                     shift and go to state 14
    Expression                     shift and go to state 38
    Or                             shift and go to state 7

state 35

    (17) Subtraction -> Expression minus_sign Expression .
    (16) Multiplication -> Expression . times_sign Expression
    (18) Division -> Expression . reverse_solidus Expression
    (15) Sum -> Expression . plus_sign Expression
    (17) Subtraction -> Expression . minus_sign Expression
    (19) And -> Expression . and_sign and_sign Expression
    (20) Or -> Expression . pipe pipe Expression
    (21) TernaryExpression -> Expression . question_mark Expression colon Expression

  ! shift/reduce conflict for times_sign resolved as shift
  ! shift/reduce conflict for reverse_solidus resolved as shift
  ! shift/reduce conflict for plus_sign resolved as shift
  ! shift/reduce conflict for minus_sign resolved as shift
  ! shift/reduce conflict for and_sign resolved as shift
  ! shift/reduce conflict for pipe resolved as shift
  ! shift/reduce conflict for question_mark resolved as shift
    $end            reduce using rule 17 (Subtraction -> Expression minus_sign Expression .)
    close_paren     reduce using rule 17 (Subtraction -> Expression minus_sign Expression .)
    colon           reduce using rule 17 (Subtraction -> Expression minus_sign Expression .)
    times_sign      shift and go to state 22
    reverse_solidus shift and go to state 23
    plus_sign       shift and go to state 25
    minus_sign      shift and go to state 27
    and_sign        shift and go to state 28
    pipe            shift and go to state 26
    question_mark   shift and go to state 24

  ! times_sign      [ reduce using rule 17 (Subtraction -> Expression minus_sign Expression .) ]
  ! reverse_solidus [ reduce using rule 17 (Subtraction -> Expression minus_sign Expression .) ]
  ! plus_sign       [ reduce using rule 17 (Subtraction -> Expression minus_sign Expression .) ]
  ! minus_sign      [ reduce using rule 17 (Subtraction -> Expression minus_sign Expression .) ]
  ! and_sign        [ reduce using rule 17 (Subtraction -> Expression minus_sign Expression .) ]
  ! pipe            [ reduce using rule 17 (Subtraction -> Expression minus_sign Expression .) ]
  ! question_mark   [ reduce using rule 17 (Subtraction -> Expression minus_sign Expression .) ]


state 36

    (19) And -> Expression and_sign and_sign . Expression
    (1) Expression -> . ExpressionEnclosedInParens
    (2) Expression -> . Term
    (3) Expression -> . Multiplication
    (4) Expression -> . Division
    (5) Expression -> . Sum
    (6) Expression -> . Subtraction
    (7) Expression -> . And
    (8) Expression -> . Or
    (9) Expression -> . Not
    (10) Expression -> . TernaryExpression
    (11) Expression -> . NoExpression
    (13) ExpressionEnclosedInParens -> . open_paren Expression close_paren
    (23) Term -> . Literal
    (24) Term -> . Identifier
    (16) Multiplication -> . Expression times_sign Expression
    (18) Division -> . Expression reverse_solidus Expression
    (15) Sum -> . Expression plus_sign Expression
    (17) Subtraction -> . Expression minus_sign Expression
    (19) And -> . Expression and_sign and_sign Expression
    (20) Or -> . Expression pipe pipe Expression
    (14) Not -> . bang Expression
    (21) TernaryExpression -> . Expression question_mark Expression colon Expression
    (12) NoExpression -> .
    (22) Literal -> . DecimalNumberLiteral
    (25) Identifier -> . identifier
    (26) DecimalNumberLiteral -> . decimal_number_literal

    open_paren      shift and go to state 13
    bang            shift and go to state 12
    times_sign      reduce using rule 12 (NoExpression -> .)
    reverse_solidus reduce using rule 12 (NoExpression -> .)
    plus_sign       reduce using rule 12 (NoExpression -> .)
    minus_sign      reduce using rule 12 (NoExpression -> .)
    and_sign        reduce using rule 12 (NoExpression -> .)
    pipe            reduce using rule 12 (NoExpression -> .)
    question_mark   reduce using rule 12 (NoExpression -> .)
    $end            reduce using rule 12 (NoExpression -> .)
    close_paren     reduce using rule 12 (NoExpression -> .)
    colon           reduce using rule 12 (NoExpression -> .)
    identifier      shift and go to state 19
    decimal_number_literal shift and go to state 17

    And                            shift and go to state 16
    Division                       shift and go to state 6
    Term                           shift and go to state 10
    DecimalNumberLiteral           shift and go to state 5
    TernaryExpression              shift and go to state 1
    Sum                            shift and go to state 2
    Not                            shift and go to state 9
    Literal                        shift and go to state 3
    ExpressionEnclosedInParens     shift and go to state 18
    Subtraction                    shift and go to state 8
    NoExpression                   shift and go to state 4
    Multiplication                 shift and go to state 11
    Identifier                     shift and go to state 14
    Expression                     shift and go to state 39
    Or                             shift and go to state 7

state 37

    (21) TernaryExpression -> Expression question_mark Expression colon . Expression
    (1) Expression -> . ExpressionEnclosedInParens
    (2) Expression -> . Term
    (3) Expression -> . Multiplication
    (4) Expression -> . Division
    (5) Expression -> . Sum
    (6) Expression -> . Subtraction
    (7) Expression -> . And
    (8) Expression -> . Or
    (9) Expression -> . Not
    (10) Expression -> . TernaryExpression
    (11) Expression -> . NoExpression
    (13) ExpressionEnclosedInParens -> . open_paren Expression close_paren
    (23) Term -> . Literal
    (24) Term -> . Identifier
    (16) Multiplication -> . Expression times_sign Expression
    (18) Division -> . Expression reverse_solidus Expression
    (15) Sum -> . Expression plus_sign Expression
    (17) Subtraction -> . Expression minus_sign Expression
    (19) And -> . Expression and_sign and_sign Expression
    (20) Or -> . Expression pipe pipe Expression
    (14) Not -> . bang Expression
    (21) TernaryExpression -> . Expression question_mark Expression colon Expression
    (12) NoExpression -> .
    (22) Literal -> . DecimalNumberLiteral
    (25) Identifier -> . identifier
    (26) DecimalNumberLiteral -> . decimal_number_literal

    open_paren      shift and go to state 13
    bang            shift and go to state 12
    times_sign      reduce using rule 12 (NoExpression -> .)
    reverse_solidus reduce using rule 12 (NoExpression -> .)
    plus_sign       reduce using rule 12 (NoExpression -> .)
    minus_sign      reduce using rule 12 (NoExpression -> .)
    and_sign        reduce using rule 12 (NoExpression -> .)
    pipe            reduce using rule 12 (NoExpression -> .)
    question_mark   reduce using rule 12 (NoExpression -> .)
    $end            reduce using rule 12 (NoExpression -> .)
    close_paren     reduce using rule 12 (NoExpression -> .)
    colon           reduce using rule 12 (NoExpression -> .)
    identifier      shift and go to state 19
    decimal_number_literal shift and go to state 17

    And                            shift and go to state 16
    Division                       shift and go to state 6
    Term                           shift and go to state 10
    DecimalNumberLiteral           shift and go to state 5
    TernaryExpression              shift and go to state 1
    Sum                            shift and go to state 2
    Not                            shift and go to state 9
    Literal                        shift and go to state 3
    ExpressionEnclosedInParens     shift and go to state 18
    Subtraction                    shift and go to state 8
    NoExpression                   shift and go to state 4
    Multiplication                 shift and go to state 11
    Identifier                     shift and go to state 14
    Expression                     shift and go to state 40
    Or                             shift and go to state 7

state 38

    (20) Or -> Expression pipe pipe Expression .
    (16) Multiplication -> Expression . times_sign Expression
    (18) Division -> Expression . reverse_solidus Expression
    (15) Sum -> Expression . plus_sign Expression
    (17) Subtraction -> Expression . minus_sign Expression
    (19) And -> Expression . and_sign and_sign Expression
    (20) Or -> Expression . pipe pipe Expression
    (21) TernaryExpression -> Expression . question_mark Expression colon Expression

  ! shift/reduce conflict for times_sign resolved as shift
  ! shift/reduce conflict for reverse_solidus resolved as shift
  ! shift/reduce conflict for plus_sign resolved as shift
  ! shift/reduce conflict for minus_sign resolved as shift
  ! shift/reduce conflict for and_sign resolved as shift
  ! shift/reduce conflict for pipe resolved as shift
  ! shift/reduce conflict for question_mark resolved as shift
    $end            reduce using rule 20 (Or -> Expression pipe pipe Expression .)
    close_paren     reduce using rule 20 (Or -> Expression pipe pipe Expression .)
    colon           reduce using rule 20 (Or -> Expression pipe pipe Expression .)
    times_sign      shift and go to state 22
    reverse_solidus shift and go to state 23
    plus_sign       shift and go to state 25
    minus_sign      shift and go to state 27
    and_sign        shift and go to state 28
    pipe            shift and go to state 26
    question_mark   shift and go to state 24

  ! times_sign      [ reduce using rule 20 (Or -> Expression pipe pipe Expression .) ]
  ! reverse_solidus [ reduce using rule 20 (Or -> Expression pipe pipe Expression .) ]
  ! plus_sign       [ reduce using rule 20 (Or -> Expression pipe pipe Expression .) ]
  ! minus_sign      [ reduce using rule 20 (Or -> Expression pipe pipe Expression .) ]
  ! and_sign        [ reduce using rule 20 (Or -> Expression pipe pipe Expression .) ]
  ! pipe            [ reduce using rule 20 (Or -> Expression pipe pipe Expression .) ]
  ! question_mark   [ reduce using rule 20 (Or -> Expression pipe pipe Expression .) ]


state 39

    (19) And -> Expression and_sign and_sign Expression .
    (16) Multiplication -> Expression . times_sign Expression
    (18) Division -> Expression . reverse_solidus Expression
    (15) Sum -> Expression . plus_sign Expression
    (17) Subtraction -> Expression . minus_sign Expression
    (19) And -> Expression . and_sign and_sign Expression
    (20) Or -> Expression . pipe pipe Expression
    (21) TernaryExpression -> Expression . question_mark Expression colon Expression

  ! shift/reduce conflict for times_sign resolved as shift
  ! shift/reduce conflict for reverse_solidus resolved as shift
  ! shift/reduce conflict for plus_sign resolved as shift
  ! shift/reduce conflict for minus_sign resolved as shift
  ! shift/reduce conflict for and_sign resolved as shift
  ! shift/reduce conflict for pipe resolved as shift
  ! shift/reduce conflict for question_mark resolved as shift
    close_paren     reduce using rule 19 (And -> Expression and_sign and_sign Expression .)
    $end            reduce using rule 19 (And -> Expression and_sign and_sign Expression .)
    colon           reduce using rule 19 (And -> Expression and_sign and_sign Expression .)
    times_sign      shift and go to state 22
    reverse_solidus shift and go to state 23
    plus_sign       shift and go to state 25
    minus_sign      shift and go to state 27
    and_sign        shift and go to state 28
    pipe            shift and go to state 26
    question_mark   shift and go to state 24

  ! times_sign      [ reduce using rule 19 (And -> Expression and_sign and_sign Expression .) ]
  ! reverse_solidus [ reduce using rule 19 (And -> Expression and_sign and_sign Expression .) ]
  ! plus_sign       [ reduce using rule 19 (And -> Expression and_sign and_sign Expression .) ]
  ! minus_sign      [ reduce using rule 19 (And -> Expression and_sign and_sign Expression .) ]
  ! and_sign        [ reduce using rule 19 (And -> Expression and_sign and_sign Expression .) ]
  ! pipe            [ reduce using rule 19 (And -> Expression and_sign and_sign Expression .) ]
  ! question_mark   [ reduce using rule 19 (And -> Expression and_sign and_sign Expression .) ]


state 40

    (21) TernaryExpression -> Expression question_mark Expression colon Expression .
    (16) Multiplication -> Expression . times_sign Expression
    (18) Division -> Expression . reverse_solidus Expression
    (15) Sum -> Expression . plus_sign Expression
    (17) Subtraction -> Expression . minus_sign Expression
    (19) And -> Expression . and_sign and_sign Expression
    (20) Or -> Expression . pipe pipe Expression
    (21) TernaryExpression -> Expression . question_mark Expression colon Expression

  ! shift/reduce conflict for times_sign resolved as shift
  ! shift/reduce conflict for reverse_solidus resolved as shift
  ! shift/reduce conflict for plus_sign resolved as shift
  ! shift/reduce conflict for minus_sign resolved as shift
  ! shift/reduce conflict for and_sign resolved as shift
  ! shift/reduce conflict for pipe resolved as shift
  ! shift/reduce conflict for question_mark resolved as shift
    $end            reduce using rule 21 (TernaryExpression -> Expression question_mark Expression colon Expression .)
    close_paren     reduce using rule 21 (TernaryExpression -> Expression question_mark Expression colon Expression .)
    colon           reduce using rule 21 (TernaryExpression -> Expression question_mark Expression colon Expression .)
    times_sign      shift and go to state 22
    reverse_solidus shift and go to state 23
    plus_sign       shift and go to state 25
    minus_sign      shift and go to state 27
    and_sign        shift and go to state 28
    pipe            shift and go to state 26
    question_mark   shift and go to state 24

  ! times_sign      [ reduce using rule 21 (TernaryExpression -> Expression question_mark Expression colon Expression .) ]
  ! reverse_solidus [ reduce using rule 21 (TernaryExpression -> Expression question_mark Expression colon Expression .) ]
  ! plus_sign       [ reduce using rule 21 (TernaryExpression -> Expression question_mark Expression colon Expression .) ]
  ! minus_sign      [ reduce using rule 21 (TernaryExpression -> Expression question_mark Expression colon Expression .) ]
  ! and_sign        [ reduce using rule 21 (TernaryExpression -> Expression question_mark Expression colon Expression .) ]
  ! pipe            [ reduce using rule 21 (TernaryExpression -> Expression question_mark Expression colon Expression .) ]
  ! question_mark   [ reduce using rule 21 (TernaryExpression -> Expression question_mark Expression colon Expression .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for times_sign in state 20 resolved as shift
WARNING: shift/reduce conflict for reverse_solidus in state 20 resolved as shift
WARNING: shift/reduce conflict for plus_sign in state 20 resolved as shift
WARNING: shift/reduce conflict for minus_sign in state 20 resolved as shift
WARNING: shift/reduce conflict for and_sign in state 20 resolved as shift
WARNING: shift/reduce conflict for pipe in state 20 resolved as shift
WARNING: shift/reduce conflict for question_mark in state 20 resolved as shift
WARNING: shift/reduce conflict for times_sign in state 30 resolved as shift
WARNING: shift/reduce conflict for reverse_solidus in state 30 resolved as shift
WARNING: shift/reduce conflict for plus_sign in state 30 resolved as shift
WARNING: shift/reduce conflict for minus_sign in state 30 resolved as shift
WARNING: shift/reduce conflict for and_sign in state 30 resolved as shift
WARNING: shift/reduce conflict for pipe in state 30 resolved as shift
WARNING: shift/reduce conflict for question_mark in state 30 resolved as shift
WARNING: shift/reduce conflict for times_sign in state 31 resolved as shift
WARNING: shift/reduce conflict for reverse_solidus in state 31 resolved as shift
WARNING: shift/reduce conflict for plus_sign in state 31 resolved as shift
WARNING: shift/reduce conflict for minus_sign in state 31 resolved as shift
WARNING: shift/reduce conflict for and_sign in state 31 resolved as shift
WARNING: shift/reduce conflict for pipe in state 31 resolved as shift
WARNING: shift/reduce conflict for question_mark in state 31 resolved as shift
WARNING: shift/reduce conflict for times_sign in state 33 resolved as shift
WARNING: shift/reduce conflict for reverse_solidus in state 33 resolved as shift
WARNING: shift/reduce conflict for plus_sign in state 33 resolved as shift
WARNING: shift/reduce conflict for minus_sign in state 33 resolved as shift
WARNING: shift/reduce conflict for and_sign in state 33 resolved as shift
WARNING: shift/reduce conflict for pipe in state 33 resolved as shift
WARNING: shift/reduce conflict for question_mark in state 33 resolved as shift
WARNING: shift/reduce conflict for times_sign in state 35 resolved as shift
WARNING: shift/reduce conflict for reverse_solidus in state 35 resolved as shift
WARNING: shift/reduce conflict for plus_sign in state 35 resolved as shift
WARNING: shift/reduce conflict for minus_sign in state 35 resolved as shift
WARNING: shift/reduce conflict for and_sign in state 35 resolved as shift
WARNING: shift/reduce conflict for pipe in state 35 resolved as shift
WARNING: shift/reduce conflict for question_mark in state 35 resolved as shift
WARNING: shift/reduce conflict for times_sign in state 38 resolved as shift
WARNING: shift/reduce conflict for reverse_solidus in state 38 resolved as shift
WARNING: shift/reduce conflict for plus_sign in state 38 resolved as shift
WARNING: shift/reduce conflict for minus_sign in state 38 resolved as shift
WARNING: shift/reduce conflict for and_sign in state 38 resolved as shift
WARNING: shift/reduce conflict for pipe in state 38 resolved as shift
WARNING: shift/reduce conflict for question_mark in state 38 resolved as shift
WARNING: shift/reduce conflict for times_sign in state 39 resolved as shift
WARNING: shift/reduce conflict for reverse_solidus in state 39 resolved as shift
WARNING: shift/reduce conflict for plus_sign in state 39 resolved as shift
WARNING: shift/reduce conflict for minus_sign in state 39 resolved as shift
WARNING: shift/reduce conflict for and_sign in state 39 resolved as shift
WARNING: shift/reduce conflict for pipe in state 39 resolved as shift
WARNING: shift/reduce conflict for question_mark in state 39 resolved as shift
WARNING: shift/reduce conflict for times_sign in state 40 resolved as shift
WARNING: shift/reduce conflict for reverse_solidus in state 40 resolved as shift
WARNING: shift/reduce conflict for plus_sign in state 40 resolved as shift
WARNING: shift/reduce conflict for minus_sign in state 40 resolved as shift
WARNING: shift/reduce conflict for and_sign in state 40 resolved as shift
WARNING: shift/reduce conflict for pipe in state 40 resolved as shift
WARNING: shift/reduce conflict for question_mark in state 40 resolved as shift
